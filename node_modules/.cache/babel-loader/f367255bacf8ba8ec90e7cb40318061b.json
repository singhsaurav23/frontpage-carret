{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\carret\\\\front\\\\src\\\\portfolio\\\\components\\\\Exchanges\\\\ExchangeList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport Modal from \"../UI/Modal\";\nimport styles from \"./ExchangeList.module.css\";\nimport Button from \"../UI/Button\";\nimport del from \"./del.png\";\nimport edit from \"./edit.png\";\nimport Icon from \"../Holdings/Icon\";\nimport Exchange from \"./Exchange\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExchangeList = props => {\n  _s();\n\n  const [exchanges, setExchanges] = useState([]);\n  const [clicked, setClicked] = useState(false);\n\n  const enterHandler = () => {\n    setClicked(true);\n  };\n\n  const onTapHandler = () => {\n    setClicked(false);\n  };\n\n  const addHandler = async (ename, eApiKey, eApiSecret, subName) => {\n    setExchanges(prev => {\n      const updated = [...prev];\n      updated.unshift({\n        apiKey: eApiKey,\n        apiSecret: eApiSecret,\n        name: ename,\n        sub: subName,\n        id: Math.random().toString()\n      });\n      return updated;\n    });\n    setClicked(false);\n    const tokenId = props.tkId;\n    const obj = {\n      apiKey: eApiKey,\n      apiSecret: eApiSecret,\n      exchangeName: ename\n    };\n    console.log(token);\n    await fetch(\"api/profiles\", {\n      method: \"POST\",\n      body: JSON.stringify(obj),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer' + tokenId\n      }\n    });\n  };\n\n  const deleteHandler = exchangeId => {\n    setExchanges(prev => {\n      const updated = prev.filter(exchange => exchange.id !== exchangeId);\n      return updated;\n    });\n  }; // const editHandler = (exchangeId) => {\n  //   deleteHandler(exchangeId);\n  //   addHandler()\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: styles.cardBox,\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Exchanges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.firstli,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.firstDiv,\n            children: \"Exchange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.secDiv,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), exchanges.map(one => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Exchange, {\n            data: one,\n            onAdd: enterHandler,\n            onDelete: deleteHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, one.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), clicked && /*#__PURE__*/_jsxDEV(Modal, {\n        onAddExchange: addHandler,\n        onTap: onTapHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: enterHandler,\n        className: styles.subButton,\n        children: \"Add Exchange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExchangeList, \"6/Zg6VA9Vif60dVT3Tsi/jNEhZo=\");\n\n_c = ExchangeList;\nexport default ExchangeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExchangeList\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/carret/front/src/portfolio/components/Exchanges/ExchangeList.js"],"names":["Fragment","useState","Card","Modal","styles","Button","del","edit","Icon","Exchange","ExchangeList","props","exchanges","setExchanges","clicked","setClicked","enterHandler","onTapHandler","addHandler","ename","eApiKey","eApiSecret","subName","prev","updated","unshift","apiKey","apiSecret","name","sub","id","Math","random","toString","tokenId","tkId","obj","exchangeName","console","log","token","fetch","method","body","JSON","stringify","headers","deleteHandler","exchangeId","filter","exchange","cardBox","firstli","firstDiv","secDiv","map","one","subButton"],"mappings":"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","sourcesContent":["import { Fragment, useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport Modal from \"../UI/Modal\";\r\nimport styles from \"./ExchangeList.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport del from \"./del.png\";\r\nimport edit from \"./edit.png\";\r\nimport Icon from \"../Holdings/Icon\";\r\nimport Exchange from \"./Exchange\";\r\n\r\nconst ExchangeList = (props) => {\r\n  const [exchanges, setExchanges] = useState([]);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const enterHandler = () => {\r\n    setClicked(true);\r\n  };\r\n  const onTapHandler = () => {\r\n    setClicked(false);\r\n  };\r\n  const addHandler = async (ename, eApiKey, eApiSecret, subName) => {\r\n    setExchanges((prev) => {\r\n      const updated = [...prev];\r\n      updated.unshift({\r\n        apiKey: eApiKey,\r\n        apiSecret: eApiSecret,\r\n        name: ename,\r\n        sub: subName,\r\n        id: Math.random().toString(),\r\n      });\r\n      return updated;\r\n    });\r\n    setClicked(false);\r\n    const tokenId = props.tkId;\r\n    const obj = {\r\n      apiKey: eApiKey,\r\n      apiSecret: eApiSecret,\r\n      exchangeName: ename\r\n    };\r\n    console.log(token)\r\n    await fetch(\"api/profiles\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(obj),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': 'Bearer' + tokenId\r\n      },\r\n    });\r\n  };\r\n\r\n  const deleteHandler = (exchangeId) => {\r\n    setExchanges((prev) => {\r\n      const updated = prev.filter((exchange) => exchange.id !== exchangeId);\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  // const editHandler = (exchangeId) => {\r\n  //   deleteHandler(exchangeId);\r\n  //   addHandler()\r\n  // }\r\n  return (\r\n    <Card className={styles.cardBox}>\r\n      <Fragment>\r\n        <h2>Exchanges</h2>\r\n        <ul>\r\n          <li className={styles.firstli}>\r\n            <div className={styles.firstDiv}>Exchange</div>\r\n            <div className={styles.secDiv}>\r\n              <div>Edit</div>\r\n              <div>Delete</div>\r\n            </div>\r\n          </li>\r\n          {exchanges.map((one) => (\r\n            <li key={one.id}>\r\n              <Exchange\r\n                data={one}\r\n                onAdd={enterHandler}\r\n                onDelete={deleteHandler}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {clicked && <Modal onAddExchange={addHandler} onTap={onTapHandler} />}\r\n        <Button onClick={enterHandler} className={styles.subButton}>\r\n          Add Exchange\r\n        </Button>\r\n      </Fragment>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExchangeList;\r\n"]},"metadata":{},"sourceType":"module"}